<?php

declare(strict_types=1);

/*
 * This file is part of the PHE Postcode to MSOA.
 *
 * (c) Graham Campbell <graham@alt-three.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace PHECovid\Postcodes\Postcode;

/**
 * @internal
 *
 * @author Graham Campbell <graham@alt-three.com>
 */
final class L28
{
    /**
     * @var array<string,string>
     */
    private const MAP = [
        '0QA' => 'E02001363',
        '0QB' => 'E02001363',
        '0QD' => 'E02001363',
        '0QE' => 'E02001363',
        '0QF' => 'E02001363',
        '0QG' => 'E02001363',
        '0QH' => 'E02001363',
        '0QJ' => 'E02001363',
        '0QL' => 'E02001332',
        '0QN' => 'E02001363',
        '0QP' => 'E02001359',
        '0QQ' => 'E02001363',
        '0QR' => 'E02001332',
        '0QS' => 'E02001363',
        '0QT' => 'E02001332',
        '0QU' => 'E02001363',
        '0QW' => 'E02001363',
        '1AB' => 'E02001332',
        '1NL' => 'E02001332',
        '1NN' => 'E02001332',
        '1NP' => 'E02001332',
        '1NR' => 'E02001332',
        '1NS' => 'E02001332',
        '1NT' => 'E02001332',
        '1NU' => 'E02001332',
        '1NW' => 'E02001332',
        '1NX' => 'E02001332',
        '1NY' => 'E02001332',
        '1RA' => 'E02001359',
        '1RB' => 'E02001332',
        '1RD' => 'E02001359',
        '1RE' => 'E02001332',
        '1RF' => 'E02001332',
        '1RG' => 'E02001332',
        '1RH' => 'E02001332',
        '1RJ' => 'E02001332',
        '1RL' => 'E02001332',
        '1RN' => 'E02001332',
        '1RP' => 'E02001332',
        '1RQ' => 'E02001332',
        '1RR' => 'E02001332',
        '1RS' => 'E02001332',
        '1RT' => 'E02001332',
        '1RU' => 'E02001332',
        '1RW' => 'E02001332',
        '1RX' => 'E02001332',
        '1RY' => 'E02001332',
        '1RZ' => 'E02001332',
        '1SA' => 'E02001332',
        '1SB' => 'E02001332',
        '1SD' => 'E02001332',
        '1SE' => 'E02001332',
        '1SF' => 'E02001332',
        '1SG' => 'E02001332',
        '1SH' => 'E02001332',
        '1SJ' => 'E02001332',
        '1SL' => 'E02001332',
        '1SN' => 'E02001332',
        '1SP' => 'E02001332',
        '1SQ' => 'E02001332',
        '1SR' => 'E02001332',
        '1SS' => 'E02001332',
        '1ST' => 'E02001332',
        '1SU' => 'E02001332',
        '1SW' => 'E02001332',
        '1SX' => 'E02001332',
        '1SY' => 'E02001332',
        '1SZ' => 'E02001332',
        '1TA' => 'E02001332',
        '1TB' => 'E02001332',
        '1WZ' => 'E02001367',
        '1YX' => 'E02001367',
        '3QA' => 'E02001332',
        '3QB' => 'E02001332',
        '3QD' => 'E02001332',
        '3QE' => 'E02001332',
        '3QF' => 'E02001332',
        '3QG' => 'E02001332',
        '3QH' => 'E02001332',
        '3QJ' => 'E02001332',
        '3QL' => 'E02001332',
        '4EA' => 'E02001332',
        '4EB' => 'E02001332',
        '4ED' => 'E02001332',
        '4EE' => 'E02001332',
        '4EF' => 'E02001332',
        '4EG' => 'E02001332',
        '4EH' => 'E02001332',
        '4EJ' => 'E02001332',
        '4EL' => 'E02001332',
        '4EN' => 'E02001332',
        '4EP' => 'E02001332',
        '4EQ' => 'E02001332',
        '4ER' => 'E02001332',
        '4ES' => 'E02001332',
        '4ET' => 'E02001332',
        '4EW' => 'E02001332',
        '4EX' => 'E02001332',
        '5RA' => 'E02001332',
        '5RB' => 'E02001332',
        '5RD' => 'E02001332',
        '5RE' => 'E02001332',
        '5RF' => 'E02001332',
        '5RG' => 'E02001332',
        '5RH' => 'E02001332',
        '5RJ' => 'E02001332',
        '5RL' => 'E02001332',
        '5RN' => 'E02001332',
        '5RP' => 'E02001332',
        '5RQ' => 'E02001332',
        '5RR' => 'E02001332',
        '5RS' => 'E02001332',
        '5RT' => 'E02001332',
        '5RU' => 'E02001332',
        '5RW' => 'E02001332',
        '5RX' => 'E02001332',
        '5RY' => 'E02001332',
        '6AA' => 'E02001332',
        '6WZ' => 'E02001367',
        '6YA' => 'E02001332',
        '6YB' => 'E02001332',
        '6YD' => 'E02001332',
        '6YE' => 'E02001332',
        '6YF' => 'E02001332',
        '6YG' => 'E02001332',
        '6YH' => 'E02001332',
        '6YJ' => 'E02001332',
        '6YL' => 'E02001332',
        '6YN' => 'E02001332',
        '6YQ' => 'E02001332',
        '6YW' => 'E02001332',
        '7RA' => 'E02001332',
        '7RB' => 'E02001332',
        '7RD' => 'E02001332',
        '7RE' => 'E02001332',
        '7RF' => 'E02001332',
        '7RG' => 'E02001332',
        '7RH' => 'E02001332',
        '7RJ' => 'E02001332',
        '7RL' => 'E02001332',
        '7RQ' => 'E02001332',
        '7TA' => 'E02001332',
        '8AD' => 'E02001363',
        '8AE' => 'E02001363',
        '8AF' => 'E02001363',
        '8AG' => 'E02001359',
        '8AH' => 'E02001359',
        '8AJ' => 'E02001359',
        '8AL' => 'E02001359',
        '8AQ' => 'E02001359',
        '8WZ' => 'E02001367',
    ];

    /**
     * @param string $inwardCode
     *
     * @return string
     */
    public static function lookup(string $inwardCode): string
    {
        $msoaCode = self::MAP[$inwardCode] ?? null;

        if (null === $msoaCode) {
            throw new \InvalidArgumentException('Unknown inward code.');
        }

        return $msoaCode;
    }
}
