<?php

declare(strict_types=1);

/*
 * This file is part of the PHE Postcode to MSOA.
 *
 * (c) Graham Campbell <graham@alt-three.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace PHECovid\Postcodes\Postcode;

/**
 * @internal
 *
 * @author Graham Campbell <graham@alt-three.com>
 */
final class RH3
{
    /**
     * @var array<string,string>
     */
    private const MAP = [
        '7AA' => 'E02006369',
        '7AB' => 'E02006369',
        '7AD' => 'E02006369',
        '7AE' => 'E02006369',
        '7AF' => 'E02006369',
        '7AG' => 'E02006369',
        '7AH' => 'E02006369',
        '7AJ' => 'E02006369',
        '7AL' => 'E02006369',
        '7AN' => 'E02006369',
        '7AP' => 'E02006369',
        '7AQ' => 'E02006369',
        '7AR' => 'E02006369',
        '7AS' => 'E02006369',
        '7AT' => 'E02006369',
        '7AU' => 'E02006369',
        '7AW' => 'E02006369',
        '7AX' => 'E02006369',
        '7AY' => 'E02006374',
        '7AZ' => 'E02006369',
        '7BA' => 'E02006369',
        '7BB' => 'E02006369',
        '7BD' => 'E02006369',
        '7BE' => 'E02006369',
        '7BF' => 'E02006369',
        '7BG' => 'E02006369',
        '7BH' => 'E02006369',
        '7BJ' => 'E02006369',
        '7BL' => 'E02006369',
        '7BN' => 'E02006369',
        '7BP' => 'E02006369',
        '7BQ' => 'E02006369',
        '7BS' => 'E02006369',
        '7BT' => 'E02006369',
        '7BU' => 'E02006369',
        '7BW' => 'E02006369',
        '7BX' => 'E02006369',
        '7BY' => 'E02006369',
        '7BZ' => 'E02006369',
        '7DA' => 'E02006369',
        '7DB' => 'E02006369',
        '7DE' => 'E02006369',
        '7DF' => 'E02006369',
        '7DG' => 'E02006369',
        '7DH' => 'E02006369',
        '7DJ' => 'E02006369',
        '7DL' => 'E02006369',
        '7DN' => 'E02006369',
        '7DP' => 'E02006369',
        '7DQ' => 'E02006369',
        '7DR' => 'E02006369',
        '7DS' => 'E02006369',
        '7DT' => 'E02006369',
        '7DU' => 'E02006369',
        '7DW' => 'E02006369',
        '7DX' => 'E02006369',
        '7DY' => 'E02006369',
        '7DZ' => 'E02006369',
        '7EA' => 'E02006369',
        '7EB' => 'E02006369',
        '7ED' => 'E02006369',
        '7EE' => 'E02006369',
        '7EF' => 'E02006369',
        '7EG' => 'E02006369',
        '7EH' => 'E02006369',
        '7EJ' => 'E02006369',
        '7EL' => 'E02006369',
        '7EN' => 'E02006369',
        '7EP' => 'E02006369',
        '7EQ' => 'E02006369',
        '7ER' => 'E02006369',
        '7ES' => 'E02006369',
        '7ET' => 'E02006369',
        '7EU' => 'E02006369',
        '7EW' => 'E02006369',
        '7EX' => 'E02006369',
        '7EY' => 'E02006369',
        '7EZ' => 'E02006369',
        '7FA' => 'E02006369',
        '7FB' => 'E02006370',
        '7FD' => 'E02006369',
        '7FE' => 'E02006369',
        '7GA' => 'E02006370',
        '7HA' => 'E02006369',
        '7HB' => 'E02006369',
        '7HD' => 'E02006369',
        '7HE' => 'E02006369',
        '7HF' => 'E02006369',
        '7HG' => 'E02006369',
        '7HH' => 'E02006369',
        '7HJ' => 'E02006369',
        '7HL' => 'E02006369',
        '7HP' => 'E02006369',
        '7HR' => 'E02006369',
        '7HS' => 'E02006369',
        '7HT' => 'E02006369',
        '7HU' => 'E02006369',
        '7HW' => 'E02006369',
        '7HX' => 'E02006369',
        '7HY' => 'E02006369',
        '7HZ' => 'E02006369',
        '7JA' => 'E02006369',
        '7JB' => 'E02006369',
        '7JD' => 'E02006369',
        '7JE' => 'E02006369',
        '7JF' => 'E02006369',
        '7JG' => 'E02006369',
        '7JH' => 'E02006369',
        '7JJ' => 'E02006369',
        '7JL' => 'E02006369',
        '7JN' => 'E02006369',
        '7JP' => 'E02006369',
        '7JQ' => 'E02006369',
        '7JR' => 'E02006369',
        '7JS' => 'E02006369',
        '7JT' => 'E02006369',
        '7JU' => 'E02006369',
        '7JW' => 'E02006369',
        '7JX' => 'E02006369',
        '7JY' => 'E02006369',
        '7JZ' => 'E02006369',
        '7LA' => 'E02006369',
        '7LB' => 'E02006369',
        '7LD' => 'E02006369',
        '7LE' => 'E02006369',
        '7LF' => 'E02006369',
        '7LG' => 'E02006369',
        '7LJ' => 'E02006369',
        '7LL' => 'E02006369',
        '7LN' => 'E02006369',
        '7LP' => 'E02006369',
        '7LR' => 'E02006369',
        '7LS' => 'E02006369',
        '7LT' => 'E02006369',
        '7LU' => 'E02006369',
        '7LW' => 'E02006369',
        '7LX' => 'E02006369',
        '7LY' => 'E02006369',
        '7LZ' => 'E02006369',
        '7NA' => 'E02006369',
        '7NB' => 'E02006369',
        '7ND' => 'E02006369',
        '7NG' => 'E02006369',
        '7NH' => 'E02006369',
        '7NJ' => 'E02006369',
        '7NL' => 'E02006369',
        '7QY' => 'E02006369',
        '7QZ' => 'E02006369',
        '7WA' => 'E02006369',
        '7WG' => 'E02006370',
        '7WR' => 'E02006370',
        '7WS' => 'E02006370',
        '7WT' => 'E02006369',
        '7WU' => 'E02006370',
        '7WW' => 'E02006370',
        '7WX' => 'E02006370',
        '7WY' => 'E02006370',
        '7WZ' => 'E02006370',
        '7XA' => 'E02006370',
        '7YA' => 'E02006370',
        '7YB' => 'E02006370',
        '7YD' => 'E02006369',
        '7YE' => 'E02006370',
        '7YF' => 'E02006370',
        '7YG' => 'E02006369',
        '7YH' => 'E02006370',
        '7YJ' => 'E02006370',
        '7YL' => 'E02006369',
        '7YN' => 'E02006370',
        '7YP' => 'E02006370',
        '7YQ' => 'E02006370',
        '7YR' => 'E02006370',
        '7YS' => 'E02006370',
        '7YT' => 'E02006370',
        '7YU' => 'E02006370',
        '7YW' => 'E02006369',
        '7YX' => 'E02006370',
        '7YY' => 'E02006370',
        '7YZ' => 'E02006370',
        '7ZT' => 'E02006370',
    ];

    /**
     * @param string $inwardCode
     *
     * @return string
     */
    public static function lookup(string $inwardCode): string
    {
        $msoaCode = self::MAP[$inwardCode] ?? null;

        if (null === $msoaCode) {
            throw new \InvalidArgumentException('Unknown inward code.');
        }

        return $msoaCode;
    }
}
